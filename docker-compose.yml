name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run tests
        run: |
          pytest

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.17.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image for FastAPI
        run: |
          cd ${{ github.workspace }}

          # Build the Docker image for the FastAPI application
          docker-compose -f docker-compose.yml build

          # Tag the FastAPI image for Docker Hub
          docker tag citatech/fastapi-book-project:latest ${{ secrets.DOCKER_USERNAME }}/fastapi-book-project:latest

          # Push the FastAPI image to Docker Hub
          docker push ${{ secrets.DOCKER_USERNAME }}/fastapi-book-project:latest

      - name: Update docker-compose.yml on EC2 (if needed)
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            echo "Updating docker-compose.yml on EC2..."
            # Update the docker-compose.yml to use the latest image
            sed -i 's|build: .|image: ${{ secrets.DOCKER_USERNAME }}/fastapi-book-project:latest|g' docker-compose.yml

            # Restart services
            echo "Restarting services on EC2..."
            docker-compose down
            docker-compose up -d --force-recreate  # Recreate containers with the latest image

            # Clean up unused images
            docker image prune -f

            # Ensure Watchtower is running to monitor the containers
            docker ps -a | grep watchtower || docker run -d --name watchtower --restart always \
              -v /var/run/docker.sock:/var/run/docker.sock containrrr/watchtower:latest
