name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run tests
        run: |
          pytest

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.17.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker images
        run: |
          # Build services
          docker-compose -f docker-compose.yml build
          
          # Tag and push FastAPI image with your specific image name
          docker tag fastapi-book-project:latest citatech/fastapi-book-project:latest
          docker push citatech/fastapi-book-project:latest

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            echo "Starting the deploy process on EC2..."
            sudo apt-get update

            # Delete the old repository and clone it again, even if it is not empty
            if [ -d "~/fastapi-book-project" ]; then
               echo "Deleting old repository..."
               sudo rm -rf ~/fastapi-book-project  # Ensure it deletes even non-empty folders
            fi

            # Clone the repository
            echo "Cloning the repository..."
            git clone ${{ github.server_url }}/${{ github.repository }}.git ~/fastapi-book-project

            cd ~/fastapi-book-project

            # Pull the latest FastAPI image (forcing it to pull latest)
            echo "Pulling the latest images..."
            echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
            docker pull citatech/fastapi-book-project:latest

            # Update the docker-compose.yml to use the pulled image
            echo "Updating docker-compose.yml to use the latest image..."
            sed -i 's|build: .|image: citatech/fastapi-book-project:latest|g' docker-compose.yml

            # Restart services 
            echo "Restarting services..."
            docker-compose down
            docker-compose up -d --force-recreate  # This ensures services are recreated using the latest image

            # Verify services are running
            echo "Verifying running services..."
            docker-compose ps

            # Clean up unused images
            echo "Cleaning up unused images..."
            docker image prune -f
