name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          pytest

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          # Assign the Docker username to a shell variable
          DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}
          # Build the Docker image using the Dockerfile
          docker build -t ${DOCKER_USERNAME}/fastapi-book-project:latest .
          # Push the image to Docker Hub
          docker push ${DOCKER_USERNAME}/fastapi-book-project:latest

      - name: Delete Existing docker-compose.yml on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            echo "Deleting existing docker-compose.yml on EC2..."
            rm -f /home/${{ secrets.EC2_USERNAME }}/docker-compose.yml || true

      - name: Copy docker-compose.yml to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          source: "docker-compose.yml"
          target: "/home/${{ secrets.EC2_USERNAME }}/"

      - name: Pull Docker Image and Run Containers on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            echo "Pulling the latest Docker image..."
            DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}
            docker pull ${DOCKER_USERNAME}/fastapi-book-project:latest

            echo "Starting containers using docker-compose..."
            cd /home/${{ secrets.EC2_USERNAME }}/
            docker-compose down || true  # Stop existing containers if any
            docker-compose up -d --force-recreate  # Start containers in detached mode